@page "/"
@inject TokenAuthenticationStateProvider TokenProvider
@inject HttpClient Http
@attribute [Authorize]

@if (todos != null && todos.Count() > 0)
{
    <table class="table">
        <thead>
            <tr>
                <th>Title</th>
                <th>Description</th>
                <th>Created</th>
                <th>Completed</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var todo in todos)
            {
                <tr>
                    <td>@todo.Title</td>
                    <td>@todo.Description</td>
                    <td>@todo.CreatedDateTime</td>
                    <td>@todo.IsFinished</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    IEnumerable<ToDo> todos;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var token = await TokenProvider.GetTokenAsync();
            todos = await Http.GetJsonAsync<IEnumerable<ToDo>>("ToDo", new AuthenticationHeaderValue("Bearer", token));
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }

    }
}